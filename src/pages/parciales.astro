---
import { envConfig } from "../config/validateEnv";
import Container from "../layouts/Container.astro";
import Layout from "../layouts/Layout.astro";

const response = await fetch(`${envConfig.host}/api/parciales.json`);
const data = await response.json();
---

<Layout title="Parciales">
  <Container>
    <div class="max-w-[90%] mx-auto md:max-w-[70%] space-y-4">
      {
        data.map((parcial, index) => (
          <div class="border rounded-lg">
            <button
              class="w-full px-4 py-2 text-left flex items-center justify-between"
              data-accordion-toggle
              aria-expanded="false"
              aria-controls={`content-${index}`}
            >
              <div>
                <div class="font-medium">{parcial.title}</div>
                <div class="text-sm text-gray-500">{parcial.description}</div>
              </div>
              <svg
                class="chevron w-4 h-4 text-gray-500 transition-transform duration-300"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
              >
                <path
                  d="M6 9l6 6 6-6"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                />
              </svg>
            </button>
            <div id={`content-${index}`} class="section-content" role="region">
              {parcial.content.length > 0 && (
                <div class="px-4 pb-2 space-y-6">
                  {parcial.content.map((subsection, subIndex) => (
                    <div
                      class={`space-y-4 ${subIndex !== parcial.content.length - 1 ? "border-b pb-6" : ""}`}
                    >
                      <h3 class="font-medium">{subsection.title}</h3>
                      <p class="text-sm text-gray-500 leading-relaxed">
                        {subsection.description}
                      </p>
                      <div class="flex justify-end">
                        <a
                          href=`/parciales/${parcial.id}/${subsection.id}`
                          class="bg-black text-white px-3 py-1.5 rounded-md text-sm"
                        >
                        Ver m√©todo
                        </a>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        ))
      }
    </div>
  </Container>
</Layout>

<style>
  .section-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
  }

  .section-content.expanded {
    max-height: 2000px;
    transition: max-height 0.5s ease-in;
  }

  .chevron.expanded {
    transform: rotate(180deg);
  }
</style>

<script>
  function toggleSection(button: HTMLButtonElement) {
    const content = button.nextElementSibling as HTMLElement;
    const chevron = button.querySelector(".chevron") as SVGElement;

    const isExpanded = button.getAttribute("aria-expanded") === "true";

    button.setAttribute("aria-expanded", (!isExpanded).toString());
    content.classList.toggle("expanded");
    chevron.classList.toggle("expanded");
  }

  document.querySelectorAll("[data-accordion-toggle]").forEach((button) => {
    button.addEventListener("click", () =>
      toggleSection(button as HTMLButtonElement)
    );
  });
</script>
